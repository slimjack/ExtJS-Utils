Ext.define("Ext.ux.util.Lookup",{statics:{fromArray:function(n,t,i){var r=new Ext.ux.util.Lookup;return i=i||function(n){return n},Ext.Array.forEach(n,function(n){r.add(t(n),i(n))}),r}},constructor:function(n){var t=this;t.map={};n&&n.each(function(n,i){t.add(i,n)})},add:function(n,t){var i=this;i.map[n]||(i.map[n]=[]);i.map[n].push(t)},remove:function(n,t){var i=this,r;i.map[n]&&(Ext.isArray(t)&&(r=t,t=Ext.Array.findBy(i.map[n],r)),Ext.Array.remove(i.map[n],t))},contains:function(n,t){var i=this;return i.map[n]?Ext.Array.contains(i.map[n],t):!1},find:function(n,t){var i=this;if(i.map[n])return Ext.Array.findBy(i.map[n],t)},removeAll:function(){var n=this;n.map={}},removeKey:function(n){var t=this;t.map[n]&&delete t.map[n]},get:function(n){var t=this;return t.map[n]},clear:function(){var n=this;n.map={}},clone:function(){var n=this;return new Ext.ux.util.Lookup(n)},each:function(n,t){var r=this,i;Ext.Object.each(r.map,function(r,u){return Ext.Array.each(u,function(u){return i=n.call(t,u,r)}),i})},eachForKey:function(n,t,i){var r=this;r.map[n]&&Ext.Array.each(r.map[n],function(n){return t.call(i,n)})},eachKey:function(n,t){var i=this;Ext.Object.each(i.map,function(i,r){return n.call(t,i,r)})}});Ext.define("Ext.ux.util.DynamicComponentQuery",{alternateClassName:"DynamicComponentQuery",_defaultMethods:["disable","enable","setReadOnly","setDisabled"],_defaultEvents:[],mixins:["Ext.util.Observable"],constructor:function(n,t,i){var r=this,u;if(n instanceof Ext.Component&&(n={view:n,query:t,excludeQuery:i}),Ext.apply(this,n),this.mixins.observable.constructor.call(this,n),r.query||Ext.Error.raise('"query" is not specified'),r.view||Ext.Error.raise('"view" is not specified'),r.view instanceof Ext.AbstractComponent||Ext.Error.raise('"view" is not an instance of Ext.AbstractComponent'),r._everyDelegates=[],r._everyRemovedDelegates=[],r._eventRelayers={},r._events=Ext.Array.union(r._defaultEvents,Ext.Array.from(r.events)),delete r.events,r.relayComponentsEvents(),u=Ext.Array.union(r._defaultMethods,Ext.Array.from(r.methods)),delete r.methods,r.createProxyMethods(u),r.view instanceof Ext.container.Container){r.view.on("add",r.onAddComponent,r);r.view.on("remove",r.onAddComponent,r)}},each:function(n){var t=this;Ext.Array.forEach(t.select(),n)},contains:function(n){var t=this;return Ext.Array.contains(t.select(),n)},isEmpty:function(){var n=this;return!n.select().length},invoke:function(n){var i=this,r=Array.prototype.slice.call(arguments,1),t=null;return Ext.Array.each(i.select(),function(i){t=i[n].apply(i,r)}),t},every:function(n){var t=this;Ext.Array.include(t._everyDelegates,n);t.each(n)},everyRemoved:function(n){var t=this;Ext.Array.include(t._everyRemovedDelegates,n)},relayComponentsEvents:function(){var n=this;n.every(function(t){n._eventRelayers[t.id]=n.relayEvents(t,n._events)});n.everyRemoved(function(t){Ext.destroy(n._eventRelayers[t.id]);delete n._eventRelayers[t.id]})},createProxyMethods:function(n){var t=this;Ext.Array.forEach(n,function(n){t[n]||(t[n]=Ext.bind(t.invoke,t,[n],0))})},select:function(){var n=this;return n._selectedComponents||(n._selectedComponents=n.view.query(n.query),n.excludeQuery&&(n._selectedComponents=Ext.Array.difference(n._selectedComponents,n.view.query(n.excludeQuery)))),n._selectedComponents},onAddComponent:function(){var n=this,r=n._selectedComponents,i,t;n._selectedComponents=null;i=n.select();t=Ext.Array.difference(i,r);t.length&&(n.applyEvery(t),n.fireEvent("componentsadd",t))},onRemoveComponent:function(){var n=this,r=n._selectedComponents,i,t;n._selectedComponents=null;i=n.select();t=Ext.Array.difference(r,i);t.length&&(n.applyEveryRemoved(t),n.fireEvent("componentsremove",t))},applyEvery:function(n){Ext.Array.forEach(me._everyDelegates,function(t){Ext.Array.forEach(n,t)})},applyEveryRemoved:function(n){Ext.Array.forEach(me._everyRemovedDelegates,function(t){Ext.Array.forEach(n,t)})}});Ext.define("Ext.ux.util.DynamicViewController",{extend:"Deft.mvc.ViewController",dynamicControl:{allFields:{selector:"[isFormField]:not([excludeForm])",excludeQuery:"[isFormField] [isFormField]"}},isReadOnly:!1,dynamicLayoutContainerSelector:"",constructor:function(){var n=this;n.callParent(arguments);n.onBeforeInit()},init:function(){var n=this,t=n.callParent();if(n.applyDynamicControl(),Ext.isIE8)n.getView().once("show",n.onAfterInit,n);else n.onAfterInit();return t},onBeforeInit:Ext.emptyFn,onAfterInit:Ext.emptyFn,onBeforeApplyLayout:Ext.emptyFn,onAfterApplyLayout:function(){var n=this;n.updateViewState()},updateViewState:function(){var n=this;n.allFields.setReadOnly(n.isReadOnly)},finalizeEditing:function(){var n=this;n.getView().getEl().focus()},applyLayout:function(n){var t=this,r,i;n&&(r=t.getView(),i=t.dynamicLayoutContainerSelector?r.query(t.dynamicLayoutContainerSelector)[0]:r,t.onBeforeApplyLayout(),i.removeAll(),i.add(n),i.doLayout(),t.onAfterApplyLayout())},setReadOnly:function(n){var t=this;t.isReadOnly!==n&&(t.isReadOnly=n,t.updateViewState())},applyDynamicControl:function(){var n=this;Ext.Object.each(n.dynamicControl,function(t,i){if(!n[t]){var u=null,r=n[t].listeners;if(r&&(u=Ext.Object.getKeys(n[t].listeners)),n[t]=new DynamicComponentQuery({view:n.getView(),query:i.selector||i.query,excludeQuery:i.excludeQuery,methods:i.methods,events:u}),r)n[t].on(r)}})},statics:{initControlSection:function(n,t,i){var r={},u,f;i.control&&(u=i.control,delete i.control,r=Ext.merge(r,u));n.control&&(f=n.control,delete n.control,r=Ext.merge(r,f));t.control=i.control=r},initDynamicControlSection:function(n,t,i){var r={},u,f;i.dynamicControl&&(u=i.dynamicControl,delete i.dynamicControl,r=Ext.merge(r,u));n.dynamicControl&&(f=n.dynamicControl,delete n.dynamicControl,r=Ext.merge(r,f));t.dynamicControl=i.dynamicControl=r}}},function(){var n=this;n.onExtended(function(t,i){var r=t.prototype;n.initControlSection(i,t,r);n.initDynamicControlSection(i,t,r)})});Ext.define("Ext.ux.plugin.ExternalValidating",{alias:"plugin.externalvalidating",extend:"Ext.AbstractPlugin",init:function(n){var r=this,i={},t=!1;n.isFormField||Ext.Error.raise("ExternalValidating plugin may be applied only to form fields");Ext.override(n,{getErrors:function(){var n=this.callParent(arguments);return t||Ext.Object.each(i,function(t,i){n=n.concat(i)}),n},getInternalErrors:function(){t=!0;var n=this.getErrors();return t=!1,n},setExternalErrors:function(t,r){i[t]=r||[];n.validate()}})}});Ext.define("Ext.ux.plugin.GridStoreReconfiguring",{alias:"plugin.gridstorereconfiguring",extend:"Ext.AbstractPlugin",init:function(n){var r=this,t,i;n instanceof Ext.grid.Panel||Ext.Error.raise("GridStoreReconfiguring plugin may be applied only to grid");t=new DynamicComponentQuery({view:n,query:"pagingtoolbar",methods:"bindStore"});i=n.store;t.bindStore(i);t.on("componentsadd",function(n){Ext.Array.each(n,function(n){n.bindStore(i)})});n.on("reconfigure",function(n,r,u,f){r!==f&&(i=r,t.bindStore(r))})}});Ext.define("Ext.ux.plugin.ReadOnlyLatching",{alias:"plugin.readonlylatching",extend:"Ext.AbstractPlugin",init:function(n){var r=this,i=!1,t=!1;n.isFormField||Ext.Error.raise("ReadOnlyLatching plugin may be applied only to form fields");Ext.override(n,{setReadOnly:function(n){i||this.callParent(arguments);t=n},latchReadOnly:function(){var r=t;n.setReadOnly(!0);i=!0;t=r},unlatchReadOnly:function(){i=!1;n.setReadOnly(t)}})}});
//# sourceMappingURL=ext-utils-all.min.js.map
